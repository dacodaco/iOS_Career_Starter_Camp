@Tutorial(time: 20) {
    @Intro(title: "Configure default files for communication") {
        Configuring default files for networking is essential for communication between servers and clients.
    }
    
    @Section(title: "Make files for Networking") {
        @ContentAndMedia(layout: horizontal) {
        To communicate with the server, you must send a request to the server in a prescribed format. In addition, the model type must be configured to store the data received from the server.
        }
        
        @Steps {
            @Step {
                First, create a JokesAPI type that contains the server's address and sample data for testing. 
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step1.swift")
            }
            
            @Step {
                Assign the server url to a static variable.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step2.swift")
            }
            
            @Step {
                Create and allocate sample data to ensure that the JSON file to be imported from the server is properly decoded.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step3.swift")
            }
            
            @Step {
                Now let's create a class to communicate with the server. You must create a JokesAPIProvider that can handle JSON files from the server.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step4.swift")
            }
            
            @Step {
                An instance of URLSession type is required for data communication. We will assign an instance to a constant called session.

                Let's configure the initializer to assign a URL Session instance when initializing the JokesAPIProvider type.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step5.swift")
            }
            
            @Step {
                This method receives and handles data from the server and passes the result to the completion closure with Result type Instance which has associated value.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step6.swift")
            }
            
            @Step {
                Create and allocate sample data to ensure that the JSON file to be imported from the server is properly decoded.
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step7.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step8.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step9.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step10.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step11.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step12.swift")
            }
            
            @Step {
                placeHolder
                
                @Code(name: "JokesAPI.swift", file: "NetworkingWithURLSession-Section1-Step13.swift")
            }
        }
    }
}
